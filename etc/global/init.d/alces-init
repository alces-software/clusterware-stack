#!/bin/bash
################################################################################
# (c) Copyright 2007-2012 Alces Software Ltd & Stephen F Norledge.             #
#                                                                              #
# HPC Cluster Toolkit                                                          #
#                                                                              #
# This file/package is part of the HPC Cluster Toolkit                         #
#                                                                              #
# This is free software: you can redistribute it and/or modify it under        #
# the terms of the GNU Affero General Public License as published by the Free  #
# Software Foundation, either version 3 of the License, or (at your option)    #
# any later version.                                                           #
#                                                                              #
# This file is distributed in the hope that it will be useful, but WITHOUT     #
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or        #
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License #
# for more details.                                                            #
#                                                                              #
# You should have received a copy of the GNU Affero General Public License     #
# along with this product.  If not, see <http://www.gnu.org/licenses/>.        #
#                                                                              #
# For more information on Alces Software, please visit:                        #
# http://www.alces-software.org/                                               #
#                                                                              #
################################################################################
# chkconfig: 2345 99 1
# alces-init: Run Alces install routines
# description: Runs Alces install procedures at boot time
#
. /etc/rc.d/init.d/functions

PID_FILE=/var/run/crmmon.pid
LOG=/var/log/alces/alces-init.log

export ALCES_HOME=/opt/clusterware/
export alces_PATH=$ALCES_HOME
if [ -z $USER ]; then
  export USER=root
fi
if [ -z $HOME ]; then
  export HOME=/root
fi

STORAGE="%STORAGE%"
SERVER="%SERVER%"
HOSTNAME=`hostname -s`

PERSONALITYPACK=/etc/personality.tgz
PERSONALITYSOURCE=http://$SERVER/alces/personality/$HOSTNAME.tgz
YUMBASECONFIG=http://$SERVER/alces/profiles/yum/base.conf

SITE_SCRIPT=/var/lib/alces/bin/site.sh
SITE_LOG=/var/log/alces/alces-site-specific.log

export STAGE1=/etc/alcesinit.stage1
export STAGE2=/etc/alcesinit.stage2

mkdir -p `dirname $LOG` &>/dev/null

SKIPRESTART=false

fetch_personality()
{
  echo -n "Fetching personality:"
  (
    curl -f $PERSONALITYSOURCE > $PERSONALITYPACK
  ) &>>$LOG && (success; echo) || (failure; echo)
}

install_puppet()
{
  echo -n "Install Puppet: "
  (
    yum --config="$YUMBASECONFIG" -y -e0 install puppet
  ) &>>$LOG && (success; echo) || (failure; echo)

}
unpack_personality()
{
  echo -n "Unpacking Personality: "
  (
    test -f $PERSONALITYPACK || exit 1
    (cd / && tar -zxvf $PERSONALITYPACK) || exit 1
  ) &>>$LOG && (success; echo) || (failure; echo)
}

start_puppet()
{
  echo -n "Running Puppet: "
  ( FACTER_install=true puppet agent --environment=alceshpc --masterport=8141 --test --waitforcert=20 ) &>>$LOG
  if [ $? -eq 1 ]; then
    failure
    echo
  else
    success
    echo
    touch $STAGE1 &>/dev/null
  fi
}

stage1()
{
  echo "ALCES INIT - STAGE 1"
  fetch_personality
  if [ -s $PERSONALITYPACK ]; then
    unpack_personality
  fi
  install_puppet
  start_puppet
  RETVAL=0
  if ( $SKIPRESTART ); then exit 0; fi
  echo -n "Rebooting:"
  (shutdown -r 1 &) &>>$LOG && success || failure
}

stage2()
{
  echo "ALCES INIT - STAGE2"; echo
  echo -n "Running Site script: "
  ($SITE_SCRIPT < /dev/null) &>>$SITE_LOG && success || failure
  echo
  touch $STAGE2
}

start ()
{
  if [ -f $STAGE1 ]; then
    if [ -f $STAGE2 ]; then
      echo "AT STAGE2" >&2
      exit 1
    else
      stage2
    fi
  else
    stage1
  fi
}

stop()
{
  echo -n "Stopping:"
  success
  RETVAL=0
  echo
}

running()
{
  test -f $STAGE1 || test -f $STAGE2 &>/dev/null
}

case "$1" in
  start)
    start
  ;;
  stop)
    running && stop
  ;;
  restart)
    stop
    start
  ;;
  status)
    running && echo "RUN" || (echo "NEVER RUN"; exit 3)
  ;;
  clearstate)
    (rm -f $STAGE1 $STAGE2) && echo "CLEARED"
  ;;
  *)
    echo "Usage: $0 {start|stop|restart|status|clearstate}"
esac

exit $RETVAL
